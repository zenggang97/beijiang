{"version":3,"sources":["model/MapList/MonitorList/Left.js","model/MapList/MonitorList/Right.js","model/MapList/Monitor.js","model/MapList/Amap.js","model/Map.js","model/ChartList/Dam.js","model/ChartList/Mon.js","model/ChartList/Year.js","model/Charts.js","App.js","serviceWorker.js","index.js"],"names":["Left","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","DataView","DataSet","react_default","a","createElement","className","BizCharts","height","data","all","area","profit","padding","forceFit","name","showTitle","g2-tooltip","backgroundColor","boxShadow","color","fontFamily","itemTpl","offsetY","type","fields","colTitle","style","fontSize","fontWeight","textAlign","fill","eachView","view","facet","dv","source","transform","field","dimension","as","percent","formatter","val","toFixed","coord","innerRadius","intervalStack","position","label","textStyle","labelLine","lineWidth","offset","stroke","Component","Right","getSum","sum","i","length","num","setState","title","bgimg","map","value","key","Monitor","MonitorList_Left","MonitorList_Right","colors","Amap","markers","extData","lib","amapkey","mapStyle","features","pitch","viewMode","skyColor","rotation","zoom","center","render","renderMarker","Map","MapList_Monitor","MapList_Amap","Dam","createView","State","上游积聚船舶","下游积聚船舶","retains","transpose","tickLine","line","grid","lineStyle","lineDash","shared","Mon","month","acc","scale","alias","shape","Active","size","Year","port","tonnage","callback","b","population","Charts","ChartList_Dam","ChartList_Mon","ChartList_Year","App","model_Map","model_Charts","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RA+LeA,cA1LX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAMf,IAmFQQ,EAAaC,IAAbD,SAER,OACKE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,yEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,4BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,6BAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,OAAQ,IAAKC,KA7FnB,CACT,CACIC,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,IAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,IAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,IAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAEZ,CACIF,IAAK,MACLC,KAAM,2BACNC,OAAQ,KAc4BC,QAAS,EAAE,GAAI,OAAQ,GAAI,QAASC,UAAQ,GACxEX,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMQ,KAAK,YACXZ,EAAAC,EAAAC,cAACE,EAAA,QAAD,CACIS,WAAW,EACXC,aAAY,CACRC,gBAAgB,YAChBC,UAAU,uBACVC,MAAM,OACNC,WAAW,eAEfC,QAAQ,kLASZnB,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAASgB,SAAU,KACnBpB,EAAAC,EAAAC,cAACE,EAAA,MAAD,CACIiB,KAAK,OACLC,OAAQ,CAAC,OACTZ,QAAS,GACTa,SAAU,CACNH,QAAS,GACTI,MAAO,CACHC,SAAU,GACVC,WAAW,IACXR,WAAW,cACXS,UAAW,SACXC,KAAM,SAGdC,SAAU,SAACC,EAAMC,GACb,IAAMzB,EAAOyB,EAAMzB,KACb0B,EAAK,IAAIlC,EACfkC,EAAGC,OAAO3B,GAAM4B,UAAU,CACtBb,KAAM,UACNc,MAAO,SACPC,UAAW,OACXC,GAAI,YAERP,EAAKG,OAAOD,EAAI,CACZM,QAAS,CACLC,UAAW,SAAAC,GACP,OAAc,IAANA,GAAWC,QAAQ,GAAK,QAI5CX,EAAKY,MAAM,QAAS,CAChBC,YAAa,MAGjBb,EAAKc,gBACAC,SAAS,WACT5B,MAAM,OAAQ,CAAC,UAAW,YAC1B6B,MAAM,SAAU,CACbP,UAAU,SAACC,GACP,OAAOA,EAAI,WAEfO,UAAU,CACNnB,KAAM,UACNF,WAAY,OACZD,SAAU,GACVP,WAAW,eAEf8B,UAAU,CACNC,UAAW,GAEfC,OAAQ,KAEX1B,MAAM,CACHyB,UAAW,EACXE,OAAQ,yBA9K7BC,aCoFJC,cApFX,SAAAA,EAAYhE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACf/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,KAAMJ,KAsCViE,OAAO,WAGH,IAFA,IAAIhD,EAAMhB,EAAKO,MAAMS,KACjBiD,EAAK,EACDC,EAAE,EAAEA,EAAElD,EAAKmD,OAAOD,IACtBD,GAAMjD,EAAKkD,GAAGE,IAElBpE,EAAKqE,SAAS,CACVJ,IAAIA,KA5CRjE,EAAKO,MAAQ,CACTS,KAAM,CACF,CACIsD,MAAM,2BACNF,IAAI,KACJG,MAAM,eAEV,CACID,MAAM,eACNF,IAAI,KACJG,MAAM,eAEV,CACID,MAAM,2BACNF,IAAI,KACJG,MAAM,cAEV,CACID,MAAM,2BACNF,IAAI,KACJG,MAAM,kBAEV,CACID,MAAM,qBACNF,IAAI,KACJG,MAAM,YAEV,CACID,MAAM,2BACNF,IAAI,KACJG,MAAM,eAGdN,IAAK,GAnCMjE,mFAkDfG,KAAK6D,0CAIL,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,+CACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,gCACeH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWV,KAAKI,MAAM0D,OAGzDvD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAENV,KAAKI,MAAMS,KAAKwD,IAAI,SAACC,EAAMC,GACvB,OACIhE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8CAA8C6D,IAAKA,GAC7DhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW4D,EAAMF,SAE1B7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW4D,EAAML,KAC9B1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW4D,EAAMH,oBAzElDR,aCgBLa,cAdX,SAAAA,EAAY5E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwE,IACf3E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0E,GAAArE,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAKf,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAD,cATMf,qBCDhBgB,EAAS,CACX,CAACnD,MAAM,WACP,CAACA,MAAM,WACP,CAACA,MAAM,WACP,CAACA,MAAM,WACP,CAACA,MAAM,WACP,CAACA,MAAM,YAgNIoD,cA5MX,SAAAA,EAAYhF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACf/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMJ,KACDQ,MAAQ,CACTyE,QAAS,CACL,CACIzB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,UACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,aAET,CACIwB,SAAU,CAAC,UAAU,WACrBxB,KAAK,OAET,CACIwB,SAAU,CAAC,UAAU,WACrBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,aAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,OAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,SAAS,WACpBxB,KAAK,aAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,OAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,UAAU,UACrBxB,KAAK,aAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,OAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,UACtBxB,KAAK,aAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,OAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,UAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,aAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,OAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,SAET,CACIwB,SAAU,CAAC,WAAW,WACtBxB,KAAK,WAtJF/B,4EA8JNiF,GACT,MAAqB,UAAjBA,EAAQlD,KACHrB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,UACiB,WAAjBG,EAAQlD,KACNrB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,UAEc,WAAjBG,EAAQlD,KACLrB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,UAEc,cAAjBG,EAAQlD,KACLrB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,UAEc,QAAjBG,EAAQlD,KACLrB,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,UAEApE,EAAAC,EAAAC,cAAA,OAAKsB,MAAO4C,EAAO,IAAnB,2CAMX,OACIpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACsE,EAAA,IAAD,CACIC,QAAS,mCACTC,SAAS,iDACTC,SAAW,CAAC,KAAM,QAClBC,MAAO,GACPC,SAAS,KACTC,SAAS,UACTC,UAAW,GACXC,KAAM,GACNC,OAAQ,CAAC,WAAW,YAEpBjF,EAAAC,EAAAC,cAACsE,EAAA,QAAD,CACIF,QAAS7E,KAAKI,MAAMyE,QACpBY,OAAQzF,KAAK0F,aACbjC,OAAQ,EAAE,GAAG,OAGrBlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAvMZiD,aCQJgC,cAdX,SAAAA,EAAY/F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,IACf9F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6F,GAAAxF,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAKf,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAD,cATElC,aCuGHmC,cAvGX,SAAAA,EAAYlG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,IACfjG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgG,GAAA3F,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAMf,IAaM0C,GADK,IAAIjC,KACDyF,aAAavD,OAbd,CACT,CACEwD,MAAO,uCACPC,uCAAU,IACVC,uCAAU,KAEZ,CACEF,MAAO,6CACPC,uCAAU,IACVC,uCAAU,OAiBhB,OAZA3D,EAAGE,UAAU,CACTb,KAAM,OACNC,OAAQ,CAAE,uCAAU,wCAEpB0C,IAAK,2BAELD,MAAO,2BAEP6B,QAAS,CAAC,WAKV5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,oDACAH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,OAAQ,IAAKC,KAAM0B,EAAItB,QAAS,CAAC,GAAI,GAAI,GAAI,KAAMC,UAAQ,GAC9DX,EAAAC,EAAAC,cAACE,EAAA,OAAD,MACAJ,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOyF,WAAS,IAChB7F,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,QACLkF,SAAU,KACVhD,MAAO,CACHI,OAAQ,GACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,KACVP,WAAW,cACXQ,WAAW,MAGnBqE,KAAM,CACF5C,OAAO,UACPF,UAAU,KAGlBjD,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,2BACLkC,MAAO,CACHI,OAAQ,EACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,KACVP,WAAW,gBAGnB8E,KAAQ,CACJ3E,KAAM,OACN4E,UAAW,CACP9C,OAAQ,UACR+C,SAAS,SAIrBlG,EAAAC,EAAAC,cAACE,EAAA,QAAD,CACI+F,QAAQ,EACRrF,aAAY,CACRC,gBAAgB,YAChBC,UAAU,uBACVC,MAAM,OACNC,WAAW,eAEfC,QAAQ,wLASZnB,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIiB,KAAK,gBACLwB,SAAS,iCACT5B,MAAO,CAAC,2BAAQ,CAAC,YAAa,0BA/FxCmC,aC2IHgD,cA3IX,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACf9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEA+Df,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,OAAQ,IAAKC,KA9DnB,CACT,CACI+F,MAAO,UACPC,IAAK,IAET,CACID,MAAO,UACTC,IAAK,MAEP,CACID,MAAO,UACPC,IAAK,IAET,CACID,MAAO,UACPC,IAAK,MAET,CACID,MAAO,UACPC,IAAK,MAET,CACED,MAAO,UACPC,IAAK,MAEP,CACID,MAAO,UACPC,IAAK,MAET,CACID,MAAO,UACPC,IAAK,MAET,CACID,MAAO,UACPC,IAAK,IAET,CACID,MAAO,WACPC,IAAK,MAET,CACID,MAAO,WACPC,IAAK,MACP,CACED,MAAO,WACPC,IAAK,OAgB+BC,MAb/B,CACTF,MAAO,CACHG,MAAO,gBAEXF,IAAK,CACDE,MAAO,mCAQ0C7F,UAAQ,GACjDX,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,QACLkF,SAAU,KACVhD,MAAO,CACHI,OAAQ,GACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,KACVP,WAAW,gBAGnB6E,KAAM,CACF5C,OAAO,UACPF,UAAU,KAGlBjD,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,MACLkC,MAAO,CACHI,OAAQ,EACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,KACVP,WAAW,gBAGnB8E,KAAQ,CACJ3E,KAAM,OACN4E,UAAW,CACX9C,OAAQ,UACR+C,SAAS,SAIjBlG,EAAAC,EAAAC,cAACE,EAAA,QAAD,CACA+F,QAAQ,EACRrF,aAAY,CACRC,gBAAgB,YAChBC,UAAU,uBACVC,MAAM,OACNC,WAAW,eAEfC,QAAQ,8LAQRnB,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIiB,KAAK,OACLwB,SAAS,YACT4D,MAAM,SACNxF,MAAM,qCAEVjB,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIiB,KAAK,OACLqF,QAAQ,EACR7D,SAAS,YACT8D,KAAM,EACN1F,MAAM,UACNwF,MAAM,qBAnIhBrD,aC6GHwD,cA3GX,SAAAA,EAAYvH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACftH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAKf,IAAMgB,EAAO,CACT,CAAEuG,KAAM,+DAAcC,QAAS,QAC/B,CAAED,KAAM,+DAAcC,QAAS,QAC/B,CAAED,KAAM,6CAAWC,QAAS,QAC5B,CAAED,KAAM,+GAAsBC,QAAS,SACvC,CAAED,KAAM,2BAAQC,QAAS,OACzB,CAAED,KAAM,qEAAeC,QAAS,QAChC,CAAED,KAAM,2BAAQC,QAAS,QACzB,CAAED,KAAM,+GAAsBC,QAAS,QACvC,CAAED,KAAM,+DAAcC,QAAS,QAC/B,CAAED,KAAM,mDAAYC,QAAS,QAC7B,CAAED,KAAM,yFAAoBC,QAAS,SAGnC9E,GADK,IAAIjC,KACDyF,aAAavD,OAAO3B,GAClC0B,EAAGC,OAAO3B,GAAM4B,UAAU,CACtBb,KAAM,OAEN0F,SAHsB,SAGb9G,EAAG+G,GAEV,OAAO/G,EAAEgH,WAAaD,EAAEC,WAAa,KAa3C,OACIjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOC,OAAQ,IAAKK,QAAS,CAAC,EAAE,GAAG,GAAG,KAAMJ,KAAM0B,EAAIuE,MAdrD,CACTM,KAAM,CACFL,MAAO,gBAEXM,QAAS,CACLN,MAAO,mCASgE7F,UAAQ,GACvEX,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOyF,WAAS,IAChB7F,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,OACLkC,MAAO,CACHI,OAAQ,EACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,OAGlBsE,KAAM,CACF5C,OAAO,UACPF,UAAU,GAEd6C,SAAW,OAEf9F,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIQ,KAAK,UACLkC,MAAO,CACHI,OAAQ,EACRH,UAAW,CACPnB,KAAM,UACNH,SAAU,KACVP,WAAW,gBAGnB8E,KAAQ,CACJ3E,KAAM,OACN4E,UAAW,CACT9C,OAAQ,UACR+C,SAAS,SAInBlG,EAAAC,EAAAC,cAACE,EAAA,QAAD,CACI+F,QAAQ,EACRrF,aAAY,CACRC,gBAAgB,YAChBC,UAAU,uBACVC,MAAM,OACNC,WAAW,cACXR,QAAQ,GAEZS,QAAQ,8LASZnB,EAAAC,EAAAC,cAACE,EAAA,KAAD,CACIiB,KAAK,WACLwB,SAAS,eACT5B,MAAM,2CAnGfmC,aCkBJ8D,cAfX,SAAAA,EAAY7H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,IACf5H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2H,GAAAtH,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAKf,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAACkH,EAAD,MACApH,EAAAC,EAAAC,cAACmH,EAAD,cAVKjE,aCYNkE,mLATb,OACEtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAACqH,EAAD,MACDvH,EAAAC,EAAAC,cAACsH,EAAD,cALcpE,aCKEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAAS5C,OAAOlF,EAAAC,EAAAC,cAAC6H,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0c5ee538.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Chart,Axis,Tooltip, Legend, Facet,} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nclass Left extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    \r\n    render() {\r\n        const data = [\r\n            {\r\n                all: 65129,\r\n                area: \"外籍船舶\",\r\n                profit: 166\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"清远船舶\",\r\n                profit: 243\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"韶关船舶\",\r\n                profit: 275\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"广州船舶\",\r\n                profit: 98\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"惠州船舶\",\r\n                profit: 196\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"肇庆船舶\",\r\n                profit: 213\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"江门船舶\",\r\n                profit: 111\r\n            },\r\n            {\r\n                all: 65129,\r\n                area: \"其他船舶\",\r\n                profit: 223\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"外籍船舶\",\r\n                profit: 123\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"清远船舶\",\r\n                profit: 70\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"韶关船舶\",\r\n                profit: 23\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"广州船舶\",\r\n                profit: 219\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"惠州船舶\",\r\n                profit: 130\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"肇庆船舶\",\r\n                profit: 171\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"江门船舶\",\r\n                profit: 139\r\n            },\r\n            {\r\n                all: 76528,\r\n                area: \"其他船舶\",\r\n                profit: 92\r\n            }\r\n        ];\r\n    \r\n        const { DataView } = DataSet;\r\n    \r\n        return (\r\n             <div className=\"height_380_left height_380\">\r\n                 <p className='rectangle'>交通量统计(离开/进入)北江</p>\r\n                 <ul className='justify_around'>\r\n                    <li className='flex_align_center color_11'>进入船舶</li>\r\n                    <li className='flex_align_center color_11'>离开船舶</li>\r\n                </ul>\r\n                <div className='pie'>\r\n                    <Chart height={310} data={data} padding={[-15, 'auto', 45, 'auto']} forceFit>\r\n                        <Axis name=\"percent\" />\r\n                        <Tooltip \r\n                            showTitle={false}\r\n                            g2-tooltip={{\r\n                                backgroundColor:'#3b3e61e6',\r\n                                boxShadow:'0px 6px 15px #2b2e4a',\r\n                                color:'#fff',\r\n                                fontFamily:'Bahnschrift'\r\n                            }}\r\n                            itemTpl=\"<li data-index={index}>\r\n                                        <p style=&quot;color:#999;font-size:12px;&quot;>\r\n                                            {name}:\r\n                                            <span style=&quot;color:#ED0E6A;font: bold 18px Bahnschrift;&quot;>\r\n                                                {value}&nbsp;\r\n                                            </span>\r\n                                        </p>\r\n                                     </li>\" \r\n                        />\r\n                        <Legend  offsetY={-20}/>\r\n                        <Facet\r\n                            type=\"rect\"\r\n                            fields={[\"all\"]}\r\n                            padding={50}\r\n                            colTitle={{\r\n                                offsetY: 95,\r\n                                style: {\r\n                                    fontSize: 36,\r\n                                    fontWeight:600,\r\n                                    fontFamily:\"Bahnschrift\",\r\n                                    textAlign: \"center\",\r\n                                    fill: \"#fff\"\r\n                                }\r\n                            }}\r\n                            eachView={(view, facet) => {\r\n                                const data = facet.data;\r\n                                const dv = new DataView();\r\n                                dv.source(data).transform({\r\n                                    type: \"percent\",\r\n                                    field: \"profit\",\r\n                                    dimension: \"area\",\r\n                                    as: \"percent\"\r\n                                });\r\n                                view.source(dv, {\r\n                                    percent: {\r\n                                        formatter: val => {\r\n                                            return (val * 100).toFixed(2) + \"%\"; \r\n                                        }\r\n                                    }\r\n                                });\r\n                                view.coord(\"theta\", {\r\n                                    innerRadius: 0.65\r\n                                });\r\n                                \r\n                                view.intervalStack()\r\n                                    .position(\"percent\")\r\n                                    .color(\"area\", ['#375eff', '#ff0069'])\r\n                                    .label(\"profit\", {\r\n                                        formatter:(val) => {\r\n                                            return val+\" 艘\";    \r\n                                        },\r\n                                        textStyle:{\r\n                                            fill: '#7c95ff', // 文本的颜色\r\n                                            fontWeight: 'bold', // 文本粗细 \r\n                                            fontSize: 16,\r\n                                            fontFamily:\"Bahnschrift\", \r\n                                        },\r\n                                        labelLine:{\r\n                                            lineWidth: 2, // 线的粗细\r\n                                        },\r\n                                        offset: 12\r\n                                    })\r\n                                    .style({\r\n                                        lineWidth: 2,\r\n                                        stroke: \"#090918\"\r\n                                    }); \r\n                                \r\n                                }    \r\n                            }\r\n                        /> \r\n                    </Chart>\r\n                </div>\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Left;","import React, { Component } from 'react';\r\n\r\n\r\nclass Right extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            data: [\r\n                {\r\n                    title:'危险品船',\r\n                    num:2356,\r\n                    bgimg:'icon_danger'\r\n                },\r\n                {\r\n                    title:'客船',\r\n                    num:2356,\r\n                    bgimg:'icon_person'\r\n                },\r\n                {\r\n                    title:'普通货船',\r\n                    num:2356,\r\n                    bgimg:'icon_cargo'\r\n                },\r\n                {\r\n                    title:'集装箱船',\r\n                    num:2356,\r\n                    bgimg:'icon_container'\r\n                },\r\n                {\r\n                    title:'散货船',\r\n                    num:2356,\r\n                    bgimg:'icon_box'\r\n                },\r\n                {\r\n                    title:'其他船舶',\r\n                    num:2356,\r\n                    bgimg:'icon_other'\r\n                } \r\n            ],\r\n            sum: 0\r\n         };\r\n    }\r\n\r\n    getSum=() => {\r\n        let data =this.state.data;\r\n        let sum =0;\r\n        for(var i=0;i<data.length;i++){\r\n            sum +=data[i].num;\r\n        }\r\n        this.setState({\r\n            sum:sum\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getSum(); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='height_380_right height_380' >\r\n                <p className='rectangle'>近3小时船舶监控</p>\r\n                <div className='justify_center'>\r\n                    <p className=\"flex_align_center\">\r\n                        船舶总数:&nbsp;<span className='color_1'>{this.state.sum}</span>\r\n                    </p>\r\n                </div>\r\n                <ul className='flex padding_30'>\r\n                    {\r\n                        this.state.data.map((value,key) => {\r\n                            return (\r\n                                <li className='flex_align_center justify_center Monitor_li' key={key}>\r\n                                    <div className='Monitor_icon'>\r\n                                        <div className={value.bgimg}></div>\r\n                                    </div>\r\n                                    <div className=' marging_10'>\r\n                                        <p className='color_2'>{value.num}</p>\r\n                                        <p className='color_3'>{value.title}</p>\r\n                                    </div>\r\n                                </li> \r\n                            )\r\n                        })\r\n                    }  \r\n                </ul> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Right;","import React, { Component } from 'react';\r\nimport Left from \"./MonitorList/Left\";\r\nimport Right from \"./MonitorList/Right\";\r\n\r\nclass Monitor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"flex topSee\" >\r\n                <Left  />\r\n                <Right  />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Monitor;","import React, { Component } from 'react';\r\nimport { Map,Markers } from 'react-amap';\r\n\r\nconst colors = [\r\n    {color:'#ff0000'},\r\n    {color:'#ff9234'},\r\n    {color:'#04dead'},\r\n    {color:'#4ef037'},\r\n    {color:'#f6490d'},\r\n    {color:'#bff4ed'},\r\n];\r\n\r\nclass Amap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            markers: [\r\n                {\r\n                    position: [113.267408,23.809369],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [113.264417,23.79974],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [113.257293,23.795657],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [113.256864,23.794714],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [113.24708,23.789609],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [113.24605,23.789217],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [113.238926,23.784661],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [113.055033,23.692835],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [113.000101,23.687805],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [112.997698,23.681202],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [112.971948,23.647241],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [112.958902,23.606036],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [113.102411,23.697236],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [113.199743,23.738256],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [113.220171,23.758054],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [113.1891,23.711382],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [113.180517,23.698965],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [113.153051,23.697236],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [113.145155,23.701009],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [113.134683,23.705095],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [113.133138,23.705881],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [113.23047,23.77832],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [113.206781,23.743598],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [113.261884,23.840669],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [113.258108,23.816958],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [112.798612,23.137049],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [112.798612,23.137049],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [112.835004,23.02145],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [112.598798,23.161672],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [112.964093,22.827299],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [113.053357,22.806413],\r\n                    type:\"cargo\"\r\n                },\r\n                {\r\n                    position: [112.808912,23.191971],\r\n                    type:\"danger\"\r\n                },\r\n                {\r\n                    position: [112.886502,23.343994],\r\n                    type:\"people\"\r\n                },\r\n                {\r\n                    position: [112.837751,23.257596],\r\n                    type:\"container\"\r\n                },\r\n                {\r\n                    position: [112.814405,23.080841],\r\n                    type:\"box\"\r\n                },\r\n                {\r\n                    position: [112.841184,23.006914],\r\n                    type:\"other\"\r\n                },\r\n                {\r\n                    position: [112.878263,22.956975],\r\n                    type:\"cargo\"\r\n                },\r\n                \r\n\r\n            ]\r\n         };\r\n    }\r\n\r\n    renderMarker(extData){\r\n        if (extData.type === \"cargo\"){\r\n          return <div style={colors[0]}>⦁</div>;\r\n        }else if(extData.type === \"danger\"){\r\n            return <div style={colors[1]}>⦁</div>;\r\n        }\r\n        else if(extData.type === \"people\"){\r\n            return <div style={colors[2]}>⦁</div>;\r\n        }\r\n        else if(extData.type === \"container\"){\r\n            return <div style={colors[3]}>⦁</div>;\r\n        }\r\n        else if(extData.type === \"box\"){\r\n            return <div style={colors[4]}>⦁</div>;\r\n        }else{\r\n            return <div style={colors[5]}>⦁</div>;\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='relative height_740' >\r\n                <Map \r\n                    amapkey={'db5165a3b2dd82367db75afcd40f4fe3'}\r\n                    mapStyle=\"amap://styles/e80898bd3771b93bf548683b39b28b30\" \r\n                    features={ ['bg', 'road']}\r\n                    pitch={70}\r\n                    viewMode=\"3D\"\r\n                    skyColor='#090918'\r\n                    rotation={-10}\r\n                    zoom={10}  \r\n                    center={[113.484522,23.378854]}\r\n                >\r\n                    <Markers \r\n                        markers={this.state.markers}\r\n                        render={this.renderMarker}\r\n                        offset={[-5,-13]}\r\n                    />\r\n                </Map>\r\n                <div className='fugai'></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Amap;","import React, { Component } from 'react';\r\nimport Monitor from \"./MapList/Monitor\";\r\nimport Amap from \"./MapList/Amap\";\r\n\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"width_6\">\r\n                <Monitor  />\r\n                <Amap />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\nimport { Chart, Geom,Axis, Tooltip,Coord,Legend,} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nclass Dam extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n\r\n        const data = [\r\n            {\r\n              State: \"清远水利枢纽\",\r\n              \"上游积聚船舶\": 189,\r\n              \"下游积聚船舶\": 314\r\n            },\r\n            {\r\n              State: \"飞来峡水利枢纽\",\r\n              \"上游积聚船舶\": 239,\r\n              \"下游积聚船舶\": 225\r\n            }\r\n        ];\r\n        const ds = new DataSet();\r\n        const dv = ds.createView().source(data);\r\n        dv.transform({\r\n            type: \"fold\",\r\n            fields: [ \"上游积聚船舶\", \"下游积聚船舶\"],\r\n            // 展开字段集\r\n            key: \"水利枢纽\",\r\n            // key字段\r\n            value: \"船舶数量\",\r\n            // value字段\r\n            retains: [\"State\"] // 保留字段集，默认为除fields以外的所有字段\r\n        });\r\n\r\n\r\n        return (\r\n            <div className='height_340'>\r\n                <p className='rectangle'>船闸聚积情况统计</p>\r\n                <div>\r\n                    <Chart height={310} data={dv} padding={[15, 30, 60, 125]} forceFit>\r\n                        <Legend />\r\n                        <Coord transpose />\r\n                        <Axis\r\n                            name=\"State\"\r\n                            tickLine={null}\r\n                            label={{\r\n                                offset: 14,\r\n                                textStyle: {\r\n                                    fill: '#ff106e',\r\n                                    fontSize: '14',\r\n                                    fontFamily:'Bahnschrift',\r\n                                    fontWeight:600\r\n                              }\r\n                            }}\r\n                            line={{\r\n                                stroke:'#131a42',\r\n                                lineWidth:3\r\n                            }}\r\n                        />\r\n                        <Axis \r\n                            name=\"船舶数量\" \r\n                            label={{\r\n                                offset: 4,\r\n                                textStyle: {\r\n                                    fill: '#444c69',\r\n                                    fontSize: '14',\r\n                                    fontFamily:'Bahnschrift'\r\n                                }\r\n                            }}\r\n                            grid = {{\r\n                                type: 'line', // 网格的类型\r\n                                lineStyle: {\r\n                                    stroke: '#131a42', // 网格线的颜色\r\n                                    lineDash:null\r\n                                }\r\n                            }}\r\n                        />\r\n                        <Tooltip \r\n                            shared={false}\r\n                            g2-tooltip={{\r\n                                backgroundColor:'#3b3e61e6',\r\n                                boxShadow:'0px 6px 15px #2b2e4a',\r\n                                color:'#fff',\r\n                                fontFamily:'Bahnschrift'\r\n                            }}\r\n                            itemTpl=\"<li data-index={index}>\r\n                                        <p style='color:#999;font-size:12px;'>\r\n                                            {name}:\r\n                                            <span style='color:#ED0E6A;font: bold 18px Bahnschrift;'>\r\n                                                {value}&nbsp;\r\n                                            </span>艘\r\n                                        </p>\r\n                                     </li>\"\r\n                        />\r\n                        <Geom\r\n                            type=\"intervalStack\"\r\n                            position=\"State*船舶数量\"\r\n                            color={[\"水利枢纽\", ['#4466f4e6', '#ff106ee6']]}\r\n                        />\r\n                    </Chart>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dam;","import React, { Component } from 'react';\r\nimport { Chart, Geom, Axis,Tooltip} from \"bizcharts\";\r\n\r\nclass Mon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        const data = [\r\n            {\r\n                month: \"1月\",\r\n                acc: 84.0\r\n            },\r\n            {\r\n                month: \"2月\",\r\n              acc: 14.9\r\n            },\r\n            {\r\n                month: \"3月\",\r\n                acc: 17.0\r\n            },\r\n            {\r\n                month: \"4月\",\r\n                acc: 20.2\r\n            },\r\n            {\r\n                month: \"5月\",\r\n                acc: 55.6\r\n            },\r\n            {\r\n              month: \"6月\",\r\n              acc: 56.7\r\n            },\r\n            {\r\n                month: \"7月\",\r\n                acc: 63.2\r\n            },\r\n            {\r\n                month: \"8月\",\r\n                acc: 24.6\r\n            },\r\n            {\r\n                month: \"9月\",\r\n                acc: 74.0\r\n            },\r\n            {\r\n                month: \"10月\",\r\n                acc: 49.4\r\n            },\r\n            {\r\n                month: \"11月\",\r\n                acc: 66.3\r\n            },{\r\n                month: \"12月\",\r\n                acc: 96.3\r\n            }\r\n        ];\r\n        const cols = {\r\n            month: {\r\n                alias: \"月份\"\r\n            },\r\n            acc: {\r\n                alias: \"货物吞吐量\"\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='height_360' >\r\n                <p className='rectangle'>北江月度货物吞吐量统计</p>\r\n                <div className='mon'>\r\n                    <Chart height={380} data={data} scale={cols} forceFit>\r\n                        <Axis\r\n                            name=\"month\"\r\n                            tickLine={null}\r\n                            label={{\r\n                                offset: 14,\r\n                                textStyle: {\r\n                                    fill: '#444c69',\r\n                                    fontSize: '14',\r\n                                    fontFamily:'Bahnschrift'\r\n                                }\r\n                            }}\r\n                            line={{\r\n                                stroke:'#131a42',\r\n                                lineWidth:2\r\n                            }}\r\n                        />\r\n                        <Axis\r\n                            name=\"acc\"\r\n                            label={{\r\n                                offset: 4,\r\n                                textStyle: {\r\n                                    fill: '#444c69',\r\n                                    fontSize: '14',\r\n                                    fontFamily:'Bahnschrift'\r\n                                }\r\n                            }}\r\n                            grid = {{\r\n                                type: 'line', // 网格的类型\r\n                                lineStyle: {\r\n                                stroke: '#131a42', // 网格线的颜色\r\n                                lineDash:null\r\n                                }\r\n                            }}\r\n                        />\r\n                        <Tooltip\r\n                        shared={false}\r\n                        g2-tooltip={{\r\n                            backgroundColor:'#3b3e61e6',\r\n                            boxShadow:'0px 6px 15px #2b2e4a',\r\n                            color:'#fff',\r\n                            fontFamily:'Bahnschrift'\r\n                        }}\r\n                        itemTpl=\"<li data-index={index}>\r\n                                    <p style='color:#999;font-size:12px;'>\r\n                                        {name}:\r\n                                        <span style='color:#ED0E6A;font: bold 18px Bahnschrift;'>\r\n                                            {value}&nbsp;\r\n                                        </span>万吨\r\n                                    </p>\r\n                                </li>\"/>\r\n                        <Geom \r\n                            type=\"area\" \r\n                            position=\"month*acc\" \r\n                            shape=\"smooth\"\r\n                            color='l(270)  0:#3f60ea00  0.5:#3f60ea'\r\n                        />\r\n                        <Geom \r\n                            type=\"line\"\r\n                            Active={false}\r\n                            position=\"month*acc\"\r\n                            size={2}\r\n                            color=\"#3f60ea\"\r\n                            shape=\"smooth\"\r\n                        />   \r\n                    </Chart>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mon;","import React, { Component } from 'react';\r\nimport {  Chart, Geom, Axis, Tooltip, Coord} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nclass Year extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        const data = [\r\n            { port: '清远市清新县婆角码头', tonnage: 710.59 },\r\n            { port: '中央储备粮清远直属库', tonnage: 223.85 },\r\n            { port: '清远深水港码头', tonnage: 327.75 },\r\n            { port: '清新港区婆角作业区旺角多用途泊位码头', tonnage: 1132.02 },\r\n            { port: '江口码头', tonnage: 52.38 },\r\n            { port: '清远港连州港区津尾码头', tonnage: 140.17 },\r\n            { port: '建材码头', tonnage: 270.86 },\r\n            { port: '英德市联行水运有限公司东堓咀货运码头', tonnage: 847.98 },\r\n            { port: '英德市望埠镇鸿运码头', tonnage: 638.26 },\r\n            { port: '东山公司专用码头', tonnage: 884.66 },\r\n            { port: '台泥(英德)水泥有限公司专用码头', tonnage: 703.33 ,} \r\n        ];\r\n        const ds = new DataSet();\r\n        const dv = ds.createView().source(data);\r\n        dv.source(data).transform({\r\n            type: \"sort\",\r\n\r\n            callback(a, b) {\r\n              // 排序依据，和原生js的排序callback一致\r\n              return a.population - b.population > 0;\r\n            }\r\n        });\r\n        const cols = {\r\n            port: {\r\n                alias: \"码头\"\r\n            },\r\n            tonnage: {\r\n                alias: \"货物吞吐量\"\r\n            }\r\n        };    \r\n\r\n\r\n        return (\r\n            <div className='height_380'>\r\n                <p className='rectangle'>码头年度货物吞吐量统计</p>\r\n                <div className='year'>\r\n                    <Chart height={330} padding={[0,20,30,200]} data={dv} scale={cols} forceFit>\r\n                        <Coord transpose />\r\n                        <Axis\r\n                            name=\"port\"\r\n                            label={{\r\n                                offset: 4,\r\n                                textStyle: {\r\n                                    fill: '#5f6ea4',\r\n                                    fontSize: '11'\r\n                                }\r\n                            }}\r\n                            line={{\r\n                                stroke:'#131a42',\r\n                                lineWidth:2\r\n                            }}\r\n                            tickLine ={null}\r\n                        />\r\n                        <Axis \r\n                            name=\"tonnage\"\r\n                            label={{\r\n                                offset: 8,\r\n                                textStyle: {\r\n                                    fill: '#444c69',\r\n                                    fontSize: '14',\r\n                                    fontFamily:'Bahnschrift'\r\n                                }\r\n                              }}\r\n                            grid = {{\r\n                                type: 'line', // 网格的类型\r\n                                lineStyle: {\r\n                                  stroke: '#131a42', // 网格线的颜色\r\n                                  lineDash:null\r\n                                }\r\n                            }}\r\n                        />\r\n                        <Tooltip \r\n                            shared={false}\r\n                            g2-tooltip={{\r\n                                backgroundColor:'#3b3e61e6',\r\n                                boxShadow:'0px 6px 15px #2b2e4a',\r\n                                color:'#fff',\r\n                                fontFamily:'Bahnschrift',\r\n                                padding:0\r\n                            }}\r\n                            itemTpl=\"<li data-index={index}>\r\n                                        <p style='color:#999;font-size:12px;'>\r\n                                            {name}:\r\n                                            <span style='color:#ED0E6A;font: bold 18px Bahnschrift;'>\r\n                                                {value}&nbsp;\r\n                                            </span>万吨\r\n                                        </p>\r\n                                     </li>\"\r\n                        />\r\n                        <Geom \r\n                            type=\"interval\" \r\n                            position=\"port*tonnage\" \r\n                            color='l(0)  0:#3f60ea00  1:#3f60ea'\r\n                        />\r\n                    </Chart>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Year;","import React, { Component } from 'react';\r\nimport Dam from \"./ChartList/Dam\";\r\nimport Mon from \"./ChartList/Mon\";\r\nimport Year from \"./ChartList/Year\";\r\n\r\n\r\nclass Charts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"width_4\" >\r\n                <Dam />\r\n                <Mon />\r\n                <Year />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\nimport './assets/css/base.css';\nimport './assets/css/index.css';\nimport Map from \"./model/Map\";\nimport Charts from \"./model/Charts\";\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t \t<div className='flex wrapper'>\n\t\t\t \t<Map />\n\t\t\t\t<Charts />\n\t\t \t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}